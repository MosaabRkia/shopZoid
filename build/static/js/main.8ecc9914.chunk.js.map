{"version":3,"sources":["reportWebVitals.js","Names.js","MainPage.js","NextPage.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Names","props","name","MainPage","useState","arrNames","setNames","showButton","setShowButton","className","onClick","fetch","method","headers","body","JSON","stringify","r","json","data","to","type","id","placeholder","document","getElementById","value","eachName","length","map","e","NextPage","console","log","App","exact","path","ReactDOM","render"],"mappings":"oKAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,8BCLC,SAASQ,EAAMC,GAC1B,OACI,6BAAKA,EAAMC,O,MCAJ,SAASC,IAAY,IAAD,EACJC,mBAAS,IADL,mBAC1BC,EAD0B,KAChBC,EADgB,OAEGF,oBAAS,GAFZ,mBAE1BG,EAF0B,KAEdC,EAFc,KAsBjC,OACE,gCACI,wBAAQC,UAAWF,EAAW,OAAO,OAAQG,QARnD,WACMC,MAAM,WAAW,CACbC,OAAO,OAAOC,QAAQ,CAAC,eAAe,oBAAoBC,KAAKC,KAAKC,UAAU,CAACX,eAC9EX,MAAK,SAAAuB,GAAC,OAAEA,EAAEC,UAAQxB,MAAK,SAAAyB,QAK5B,SAAyE,cAAC,IAAD,CAAMC,GAAG,QAAT,oCAC3E,uBAAOC,KAAK,OAAOC,GAAG,gBAAgBC,YAAY,eAClD,wBAAQb,QArBZ,WACE,IAAIR,EAAOsB,SAASC,eAAe,iBAAiBC,MACpDpB,EAAS,GAAD,mBAAKD,GAAL,CAAc,CAAEsB,SAAUzB,MACnCG,EAASuB,OAAO,GAAK,GACpBpB,GAAc,IAiBZ,mBACA,6BACGH,EAASwB,KAAI,SAACC,GACb,OAAO,cAAC,EAAD,CAAO5B,KAAM4B,EAAEH,mBC/BjB,SAASI,IAAY,IAAD,EACN3B,mBAAS,IADH,mBACxBJ,EADwB,KAClBM,EADkB,KAS/B,OACI,gCACI,wBAAQI,QAThB,WACIC,MAAM,YAAYjB,MAAK,SAAAuB,GAAC,OAAEA,EAAEC,UAAQxB,MAAK,SAAAyB,GACrCa,QAAQC,IAAId,GACZb,EAASa,OAMT,iCACCnB,EAAM6B,KAAI,SAACC,GACd,OAAO,cAAC9B,EAAD,CAAOE,KAAM4B,EAAEH,iBCUjBO,MApBf,WAQE,OACE,qBAAKzB,UAAU,MAAf,SACH,eAAC,IAAD,WACO,eAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,IAAlB,cAAuB,cAACjC,EAAD,OACvB,eAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,QAAlB,cAA2B,cAACL,EAAD,aCXnCM,IAASC,OACP,cAAC,IAAD,UACC,cAAC,EAAD,MAEDd,SAASC,eAAe,SAG1BlC,M","file":"static/js/main.8ecc9914.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\n\r\nexport default function Names(props) {\r\n    return (\r\n        <li>{props.name}</li>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport Names from \"./Names\";\r\nimport './css.css'\r\nexport default function MainPage() {\r\n  const [arrNames, setNames] = useState([]);\r\n  const [showButton, setShowButton] = useState(false);\r\n  let templist = \"\";\r\n  \r\n  function sendTheData() {\r\n    let name = document.getElementById(\"inputAddNames\").value;\r\n    setNames([...arrNames,{ eachName: name } ]);\r\nif(arrNames.length+1 >= 5){\r\n    setShowButton(true);\r\n}\r\n    /*fetch('/setData',{\r\n          method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({name})\r\n        });*/\r\n  }\r\n\r\n  function onclickRandomPage(){\r\n        fetch('/setData',{\r\n            method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({arrNames})\r\n          }).then(r=>r.json()).then(data=>{});\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <button className={showButton?'show':'hide'} onClick={onclickRandomPage}><Link to=\"/Next\">click to random page</Link></button>\r\n      <input type=\"text\" id=\"inputAddNames\" placeholder=\"enter Name\"/>\r\n      <button onClick={sendTheData}>click</button>\r\n      <ul>\r\n        {arrNames.map((e) => {\r\n          return <Names name={e.eachName} />;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function NextPage() {\r\n    const [Names,setNames] = useState([]);\r\n    function show2Names(){\r\n        fetch('/getData').then(r=>r.json()).then(data=>{\r\n            console.log(data);\r\n            setNames(data);\r\n            \r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={show2Names}>Show 2 random names</button>\r\n            {Names.map((e) => {\r\n          return <Names name={e.eachName} />\r\n        })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport MainPage from \"./MainPage\";\r\nimport NextPage from \"./NextPage\";\r\n\r\nfunction App() {\r\n\r\n /* useEffect(() => {\r\n    fetch('/getdata').then(r=>r.json()).then(data=>{console.log(data)})\r\n  },[])*/\r\n\r\n \r\n\r\n  return (\r\n    <div className=\"App\">\r\n <Switch>\r\n        <Route exact path=\"/\"> <MainPage /></Route>\r\n        <Route exact path=\"/Next\"> <NextPage /></Route>\r\n      </Switch>\r\n       \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n/**\r\n *       <Link to=\"/\">name</Link>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n                  </Route>\r\n      </Switch>\r\n */","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App' \r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n   <App />\r\n   </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}